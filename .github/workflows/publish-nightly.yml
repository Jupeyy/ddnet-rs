name: Publish Nightly

on:
  workflow_run:
    workflows: ["Build"]
    types: [completed]

permissions:
  contents: write
  actions: read

jobs:
  release:
    name: Publish Nightly Release
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        run-id: ${{ github.event.workflow_run.id }}
        pattern: ddnet-rs-*
        # keep artifacts in separate folders to avoid filename collisions
        merge-multiple: false
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Re-zip each artifact folder with original name
      run: |
        set -euo pipefail
        mkdir -p release-artifacts
        shopt -s nullglob
        for d in ddnet-rs-*; do
          if [ -d "$d" ]; then
            echo "Zipping contents of $d -> release-artifacts/$d.zip"
            (
              cd "$d"
              zip -qr "../release-artifacts/$d.zip" *
            )
          fi
        done

    - name: Generate BLAKE3 checksums
      run: |
        set -euo pipefail
        sudo apt-get update
        sudo apt-get install -y b3sum
        cd release-artifacts
        echo "${{ github.event.workflow_run.head_sha }}" > blake3_checksum.txt
        for f in *.zip; do
          # b3sum prints: "<hash>  <filename>"; we want: "<filename> <hash>"
          hash=$(b3sum "$f" | awk '{print $1}')
          echo "$f $hash" >> blake3_checksum.txt
        done

    - name: Remove old nightly releases (keep only tag 'nightly')
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const releases = await github.paginate(github.rest.repos.listReleases, { owner, repo, per_page: 100 });
          for (const r of releases) {
            if (r.tag_name && r.tag_name.startsWith('nightly') && r.tag_name !== 'nightly') {
              core.info(`Deleting old nightly release id=${r.id}, tag=${r.tag_name}`);
              try { await github.rest.repos.deleteRelease({ owner, repo, release_id: r.id }); } catch (e) { core.warning(`${e}`); }
              const ref = `tags/${r.tag_name}`;
              try { await github.rest.git.deleteRef({ owner, repo, ref }); } catch (e) { core.warning(`${e}`); }
            }
          }
          const nightly = releases.find(r => r.tag_name === 'nightly');
          if (nightly) {
            core.info(`Deleting existing nightly release id=${nightly.id}`);
            try { await github.rest.repos.deleteRelease({ owner, repo, release_id: nightly.id }); } catch (e) { core.warning(`${e}`); }
            try { await github.rest.git.deleteRef({ owner, repo, ref: 'tags/nightly' }); } catch (e) { core.warning(`${e}`); }
          }

    - name: Create Nightly release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: nightly
        target_commitish: ${{ github.event.workflow_run.head_sha }}
        name: Nightly
        body: |
          Automated nightly build from latest code in main.
          Commit: ${{ github.event.workflow_run.head_sha }}
        draft: false
        prerelease: true
        make_latest: false
        files: |
          release-artifacts/*.zip
          release-artifacts/blake3_checksum.txt
